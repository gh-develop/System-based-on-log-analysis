* Subject : How to use ChatGpt  (Based on Python)

* 준비사항
 - Chat Gpt 학습방법
 - 준비사항
 - 세부내용

1. Chat Gpt 학습방법
 1-1. Create Data by Type of Faiss (Faiss Libaray)
 1-2. Ready to OpenApi Key 
  > BASE64(c2stcHJvai12aWREcE9rNERZYTlwdXpGeXFpd1QzQmxia0ZKZmtrMGZ3NVJOWGJMVkFFYWV3ejY=)
 1-3. Save to Parameter using Faiss Libaray And LangChain Libaray
 1-4. Prompts 생성하기
 1-5. similarity_search 함수를 이용하여 저장된 parameter의 결과 찾기
 1-6. ChatGpt 연동
  > ChatOpenAI(model_name="gpt-3.5-turbo", temperature=0.5)
 1-7. System Prompts (Gpt4에서 사용자 Gpt 생성 시 필요한 Prompts) 및 Question Prompts 선언하기
 1-8. LLMChain 을 통해 Result 받기
  > chain = LLMChain(llm=chat, prompt=chat_prompt)
    response = chain.run(question=query, docs=retrieved_contents)

2. 준비사항
 2-1. OpenApi Key (완료)
  * 결재 필요할 수 있음. 실습 미진행. (Usage Limits 설정 가능)
 2-2. Faiss Libary의 이해
 2-3. LangChain Livaray의 이해
 2-4. LLMChain의 이해

3. 세부내용
 3-1. Faiss Libaray (Facebook에서 만든 유사도 측정 Libaray)
  - Install & Checking Version
   > https://github.com/facebookresearch/faiss/blob/main/INSTALL.md
  - Qusetion ?
   > Faiss 사용하기 위해서는 데이터들을 Text 파일로 일단 Drop해야 되는건가 ?
  - 일단 문서로만 Drop 하면 from_documents 함수를 통해 Vector 에 저장하고 similarity_search을 통해 결과값 구할 수 있는것 같음 .
 3-2. LangChain Libaray
  - ChatOpenAI 통해 ChatGpt와 Connection
  - System, Question Prompts을 통해 통일된 Prompts 생성
  - Faiss Libaray을 통해 받은 유사 결과와 함께 ChatGpt 질문
   > chain = LLMChain(llm=chat, prompt=<통일된 Prompts>) // LLM선언
     response = chain.run(question=<질문>, docs=<Faiss을 통해 받은 결과>)

 * 즉 ChatGpt의 학습이란 유사한 상황 데이터를 최대한 많이 저장한다.
   이후 저장된 데이터를 통해 Faiss Libaray을 가지고 유사도 검증을 한다.
   유사도 결과와 질문을 ChatGpt에게 Prompts로 전달하여 최적의 결과를 받는다.
   (상황 데이터가 많을수록 대답이 정확해진다.)

  
  
